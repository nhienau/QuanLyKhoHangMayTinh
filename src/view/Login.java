/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import BUS.ChiTietQuyenBUS;
import BUS.NguoiDungBUS;
import BUS.NhomQuyenBUS;
import DTO.ChiTietQuyenDTO;
import com.formdev.flatlaf.FlatLightLaf;
import com.mysql.cj.protocol.Resultset;
import com.sun.jdi.connect.spi.Connection;
import helper.BCrypt;
import OldDAO.AccountDAO;
import DTO.NguoiDungDTO;
import DTO.NhomQuyenDTO;
import GUI.MainLayout;
import helper.Validation;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import model.Account;
import net.miginfocom.swing.MigLayout;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author kali
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form JFrame
     */
    Connection con = null;
    Resultset rs = null;
    Color panDefualt, panEnter, panClick;
    
    NguoiDungBUS ndBUS = new NguoiDungBUS();
    NhomQuyenBUS nqBUS = new NhomQuyenBUS();
    ChiTietQuyenBUS ctqBUS = new ChiTietQuyenBUS();

    public Login() {
        initComponents();
        setLocationRelativeTo(null);
        UIManager.put("Button.focus", Color.white);
        panDefualt = new Color(89, 168, 105);
        panClick = new Color(89, 168, 120);
        panEnter = new Color(89, 168, 120);
        btnLogin.setBackground(panDefualt);
        ImageIcon logo = new ImageIcon(getClass().getResource("/icon/logo.png"));
        setIconImage(logo.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pContainer = new javax.swing.JPanel();
        pIcon = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pForm = new javax.swing.JPanel();
        pLoginForm = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        lblForgotPassword = new javax.swing.JLabel();
        btnLogin = new javax.swing.JPanel();
        lblLogin = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý kho hàng máy tính");
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        pContainer.setBackground(new java.awt.Color(13, 39, 51));
        pContainer.setPreferredSize(new java.awt.Dimension(800, 600));
        pContainer.setLayout(new java.awt.BorderLayout());

        pIcon.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        pIcon.setPreferredSize(new java.awt.Dimension(400, 600));
        pIcon.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 65)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/user.png"))); // NOI18N
        jLabel1.setText("LOGIN");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setIconTextGap(0);
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pIcon.add(jLabel1, java.awt.BorderLayout.CENTER);

        pContainer.add(pIcon, java.awt.BorderLayout.WEST);

        pForm.setBackground(new java.awt.Color(13, 39, 51));
        pForm.setPreferredSize(new java.awt.Dimension(400, 600));
        pForm.setLayout(new java.awt.GridBagLayout());

        pLoginForm.setBackground(new java.awt.Color(13, 39, 51));
        pLoginForm.setName(""); // NOI18N
        pLoginForm.setPreferredSize(new java.awt.Dimension(320, 270));
        pLoginForm.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblUsername.setFont(new java.awt.Font("SF Pro Display", 1, 18)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setText("Username");
        pLoginForm.add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        txtUsername.setBackground(new java.awt.Color(13, 39, 51));
        txtUsername.setFont(new java.awt.Font("SF Pro Display", 1, 18)); // NOI18N
        txtUsername.setForeground(new java.awt.Color(255, 255, 255));
        txtUsername.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtUsername.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createEmptyBorder(0, 0, 2, 0)));
        txtUsername.setCaretColor(new java.awt.Color(255, 255, 255));
        txtUsername.setPreferredSize(new java.awt.Dimension(300, 26));
        txtUsername.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtUsernameMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtUsernameMousePressed(evt);
            }
        });
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });
        txtUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUsernameKeyPressed(evt);
            }
        });
        pLoginForm.add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 340, 40));

        lblPassword.setFont(new java.awt.Font("SF Pro Display", 1, 18)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword.setText("Password");
        pLoginForm.add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        txtPassword.setBackground(new java.awt.Color(13, 39, 51));
        txtPassword.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(255, 255, 255));
        txtPassword.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createEmptyBorder(0, 0, 2, 0)));
        txtPassword.setCaretColor(new java.awt.Color(255, 255, 255));
        txtPassword.setPreferredSize(new java.awt.Dimension(300, 27));
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
        });
        pLoginForm.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 280, 40));

        lblForgotPassword.setFont(new java.awt.Font("SF Pro Display", 2, 16)); // NOI18N
        lblForgotPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblForgotPassword.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblForgotPassword.setText("Quên mật khẩu?");
        lblForgotPassword.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblForgotPassword.setPreferredSize(new java.awt.Dimension(300, 24));
        lblForgotPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblForgotPasswordMouseClicked(evt);
            }
        });
        pLoginForm.add(lblForgotPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 280, 30));

        btnLogin.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        btnLogin.setToolTipText("");
        btnLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogin.setPreferredSize(new java.awt.Dimension(300, 40));
        btnLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLoginMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLoginMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLoginMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnLoginMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnLoginMouseReleased(evt);
            }
        });
        btnLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLoginKeyPressed(evt);
            }
        });
        btnLogin.setLayout(new java.awt.BorderLayout());

        lblLogin.setFont(new java.awt.Font("SF Pro Display", 1, 18)); // NOI18N
        lblLogin.setForeground(new java.awt.Color(255, 255, 255));
        lblLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogin.setText("Đăng nhập");
        btnLogin.add(lblLogin, java.awt.BorderLayout.CENTER);

        pLoginForm.add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 200, 30));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pForm.add(pLoginForm, gridBagConstraints);
        pLoginForm.setLayout(new MigLayout("wrap, fillx", "[]", "[]12[]12[]12[]12[]12[]"));

        pContainer.add(pForm, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void btnLoginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseEntered
        // TODO add your handling code here:
        btnLogin.setBackground(panEnter);
    }//GEN-LAST:event_btnLoginMouseEntered

    private void btnLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseClicked
        handleLogin();
    }//GEN-LAST:event_btnLoginMouseClicked

    private void btnLoginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseExited
        // TODO add your handling code here:
        btnLogin.setBackground(panClick);
    }//GEN-LAST:event_btnLoginMouseExited

    private void btnLoginMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMousePressed
        // TODO add your handling code here:

        btnLogin.setBackground(panEnter);
    }//GEN-LAST:event_btnLoginMousePressed

    private void btnLoginMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseReleased
        // TODO add your handling code here:
        btnLogin.setBackground(panClick);
    }//GEN-LAST:event_btnLoginMouseReleased

    private void txtUsernameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUsernameMouseEntered
        // TODO add your handling code here:    
    }//GEN-LAST:event_txtUsernameMouseEntered

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void btnLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLoginKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLoginKeyPressed

    private void txtUsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsernameKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Enter was pressed. Your code goes here.
            handleLogin();
        }
    }//GEN-LAST:event_txtUsernameKeyPressed

    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Enter was pressed. Your code goes here.
            handleLogin();
        }
    }//GEN-LAST:event_txtPasswordKeyPressed

    private void txtUsernameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUsernameMousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtUsernameMousePressed

    private void lblForgotPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblForgotPasswordMouseClicked
        // TODO add your handling code here:
        RecoverPassword rcv = new RecoverPassword(this, rootPaneCheckingEnabled);
        rcv.setVisible(true);
    }//GEN-LAST:event_lblForgotPasswordMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnsupportedLookAndFeelException {
        UIManager.setLookAndFeel(new FlatLightLaf());

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    public void handleLogin() {
//        String usercheck = txtUsername.getText();
//        String passwordcheck = txtPassword.getText();
//        if (usercheck.equals("") || passwordcheck.equals("")) {
//            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ !", "Cảnh báo !", JOptionPane.WARNING_MESSAGE);
//        } else {
//            try {
//                Account acc = AccountDAO.getInstance().selectById(usercheck);
//                if (acc == null) {
//                    JOptionPane.showMessageDialog(this, "Tài khoản không tồn tại trên hệ thống !", "Cảnh báo !", JOptionPane.WARNING_MESSAGE);
//                } else {
//                    if (BCrypt.checkpw(passwordcheck, acc.getPassword())) {
//                        if (acc.getStatus() == 1) {
//                            try {
//                                JOptionPane.showMessageDialog(this, "Đăng nhập thành công!");
//                                this.dispose();
//                                String role = acc.getRole();
//                                if (role.equals("Admin")) {
//                                    Admin ad = new Admin(acc);
//                                    ad.setVisible(true);
////                                    ad.setCurrentAcc(acc);
//                                    ad.setName(acc.getFullName());
//                                } else if (role.equals("Quản lý kho")) {
//                                    QuanLiKho ql = new QuanLiKho();
//                                    ql.setVisible(true);
//                                    ql.setCurrentAcc(acc);
//                                    ql.setName(acc.getFullName());
//                                } else if (role.equals("Nhân viên nhập")) {
//                                    NhapKho ql = new NhapKho(acc);
//                                    ql.setVisible(true);
//                                    ql.setName(acc.getFullName());
//                                } else if (role.equals("Nhân viên xuất")) {
//                                    XuatKho ql = new XuatKho(acc);
//                                    ql.setVisible(true);
//                                    ql.setName(acc.getFullName());
//                                }
//                            } catch (UnsupportedLookAndFeelException ex) {
//                                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
//                            }
//                        } else {
//                            JOptionPane.showMessageDialog(this, "Tài khoản của bạn đã bị khóa !", "Cảnh báo !", JOptionPane.WARNING_MESSAGE);
//                        }
//                    } else {
//                        JOptionPane.showMessageDialog(this, "Sai mật khẩu !", "Cảnh báo !", JOptionPane.WARNING_MESSAGE);
//                    }
//                }
//            } catch (Exception e) {
//            }
//        }

        // Validate input
        String username = txtUsername.getText();
        String password = new String(txtPassword.getPassword());

        if (!checkInput(username, password)) {
            return;
        }
        
        if (!Validation.isValidUsername(username)) {
            JOptionPane.showMessageDialog(Login.this, "Tài khoản không hợp lệ", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Authentication
        NguoiDungDTO user = null;
        try {
            user = ndBUS.verifyLogin(username);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(Login.this, "Lỗi kết nối cơ sở dữ liệu", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Login.this, "Lỗi không xác định", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }
        
        if (user == null || !BCrypt.checkpw(password, user.getMatKhau())) {
            JOptionPane.showMessageDialog(Login.this, "Tên đăng nhập hoặc mật khẩu không đúng.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (user.getTrangThai() == 0) {
            JOptionPane.showMessageDialog(Login.this, "Tài khoản của bạn đã bị khoá.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        NhomQuyenDTO permissionInfo = null;
        try {
            permissionInfo = nqBUS.getPermissionById(user.getMaNhomQuyen());
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(Login.this, "Lỗi kết nối cơ sở dữ liệu", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Login.this, "Lỗi không xác định", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }
        
        if (permissionInfo.getTrangThai() == 0) {
            JOptionPane.showMessageDialog(Login.this, "Đăng nhập thất bại do tài khoản của bạn thuộc vào nhóm quyền không còn hiệu lực.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Authorization
        List<ChiTietQuyenDTO> permission = new ArrayList<>();
        try {
            permission = ctqBUS.getAuthorization(user.getMaNhomQuyen());
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(Login.this, "Lỗi kết nối cơ sở dữ liệu", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Login.this, "Lỗi không xác định", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }
        
        try {
            MainLayout mainApp = new MainLayout(user, permissionInfo, permission);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }
    
    public boolean checkInput(String username, String password) {
        if (username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(Login.this, "Bạn chưa nhập tài khoản, mật khẩu", "Error", JOptionPane.ERROR_MESSAGE);
            if (username.isEmpty()) {
                txtUsername.requestFocus();
            } else if (password.isEmpty()) {
                txtPassword.requestFocus();
            }
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblForgotPassword;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel pContainer;
    private javax.swing.JPanel pForm;
    private javax.swing.JPanel pIcon;
    private javax.swing.JPanel pLoginForm;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
