package GUI.Dialog;

import DTO.DateRangeDTO;
import GUI.ThongKeGUI;
import helper.DateHelper;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.temporal.ChronoUnit;
import java.util.Date;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

public class SelectDateDialog extends javax.swing.JDialog {
    private JInternalFrame parent;
    private int dateRangeLength; // Ràng buộc chỉ được chọn khoảng thời gian tối đa bao nhiêu ngày; truyền giá trị 0 nếu không cần ràng buộc
    private String dateRangeName;
    private DateRangeDTO initialDateRange;
    private boolean canSelectAfterToday; // Cho phép chọn thời gian sau ngày hôm nay không
    
    public SelectDateDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public SelectDateDialog(JInternalFrame parent, javax.swing.JFrame owner, boolean modal, String dateRangeName, DateRangeDTO dateRange, int dateRangeLength, boolean canSelectAfterToday) {
        super(owner, modal);
        initComponents();
        this.parent = parent;
        this.dateRangeLength = dateRangeLength;
        this.dateRangeName = dateRangeName;
        this.initialDateRange = dateRange;
        this.canSelectAfterToday = canSelectAfterToday;
        setLocationRelativeTo(null);
        if (dateRange.getFromDate() != null && dateRange.getToDate() != null) {
            dcFrom.setDate(DateHelper.convertLDTToDateObj(dateRange.getFromDate()));
            dcTo.setDate(DateHelper.convertLDTToDateObj(dateRange.getToDate()));
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked") 
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pContainer = new javax.swing.JPanel();
        lblFrom = new javax.swing.JLabel();
        dcFrom = new com.toedter.calendar.JDateChooser();
        lblTo = new javax.swing.JLabel();
        dcTo = new com.toedter.calendar.JDateChooser();
        btnApply = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Chọn ngày");
        setResizable(false);

        pContainer.setBackground(new java.awt.Color(255, 255, 255));

        lblFrom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFrom.setForeground(new java.awt.Color(0, 0, 0));
        lblFrom.setText("Từ ngày");

        dcFrom.setForeground(new java.awt.Color(255, 255, 255));
        dcFrom.setDateFormatString("dd/MM/yyyy");
        dcFrom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblTo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTo.setForeground(new java.awt.Color(0, 0, 0));
        lblTo.setText("Đến ngày");

        dcTo.setForeground(new java.awt.Color(255, 255, 255));
        dcTo.setDateFormatString("dd/MM/yyyy");
        dcTo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnApply.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnApply.setForeground(new java.awt.Color(0, 0, 0));
        btnApply.setText("Áp dụng");
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(0, 0, 0));
        btnCancel.setText("Huỷ bỏ");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pContainerLayout = new javax.swing.GroupLayout(pContainer);
        pContainer.setLayout(pContainerLayout);
        pContainerLayout.setHorizontalGroup(
            pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pContainerLayout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFrom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTo)
                    .addComponent(dcTo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pContainerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnApply)
                .addGap(18, 18, 18)
                .addComponent(btnCancel)
                .addGap(24, 24, 24))
        );
        pContainerLayout.setVerticalGroup(
            pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pContainerLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFrom)
                    .addComponent(lblTo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 191, Short.MAX_VALUE)
                .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApply)
                    .addComponent(btnCancel))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        // TODO add your handling code here:
        Date fromDate = dcFrom.getDate();
        Date toDate = dcTo.getDate();
        if (fromDate == null || toDate == null) {
            JOptionPane.showMessageDialog(SelectDateDialog.this, "Vui lòng chọn đầy đủ các trường ngày", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (fromDate.after(toDate)) {
            JOptionPane.showMessageDialog(SelectDateDialog.this, "Ngày bắt đầu không được lớn hơn ngày kết thúc", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
//        LocalDateTime localFromDate = dcFrom.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();
        LocalDateTime localFromDate = DateHelper.convertDateObjToLDT(fromDate);
        LocalDateTime localToDate = DateHelper.convertDateObjToLDT(toDate);
        
        if (initialDateRange.getFromDate() != null && initialDateRange.getToDate() != null && (localFromDate.toLocalDate().isEqual(initialDateRange.getFromDate().toLocalDate())) && (localToDate.toLocalDate().isEqual(initialDateRange.getToDate().toLocalDate()))) {
            this.dispose();
            return;
        }
        
        long differenceInDays = ChronoUnit.DAYS.between(localFromDate, localToDate);
        
        if (dateRangeLength != 0 && differenceInDays > dateRangeLength) {
            JOptionPane.showMessageDialog(SelectDateDialog.this, "Khoảng thời gian tìm kiếm không được vượt quá " + dateRangeLength + " ngày, vui lòng chọn lại", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (!this.canSelectAfterToday) {
            LocalDate today = LocalDate.now();
            if (localFromDate.toLocalDate().isAfter(today) || localToDate.toLocalDate().isAfter(today)) {
                JOptionPane.showMessageDialog(SelectDateDialog.this, "Không được chọn khoảng thời gian sau ngày hôm nay", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } 
        }
        
        DateRangeDTO dateRange = new DateRangeDTO(localFromDate, localToDate);
        
        if (parent instanceof ThongKeGUI) {
            ThongKeGUI thongKeGUI = (ThongKeGUI) parent;
            thongKeGUI.setDateRange(this.dateRangeName, dateRange);
            thongKeGUI.setIsLoading(this.dateRangeName, true);
        }
        
        this.dispose();
    }//GEN-LAST:event_btnApplyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectDateDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectDateDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectDateDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectDateDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SelectDateDialog dialog = new SelectDateDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApply;
    private javax.swing.JButton btnCancel;
    private com.toedter.calendar.JDateChooser dcFrom;
    private com.toedter.calendar.JDateChooser dcTo;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblTo;
    private javax.swing.JPanel pContainer;
    // End of variables declaration//GEN-END:variables
}
