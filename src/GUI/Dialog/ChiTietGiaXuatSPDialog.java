package GUI.Dialog;

import BUS.ThongKeBUS;
import DTO.DateRangeDTO;
import DTO.ThongKe.ChiTietGiaXuatSPDTO;
import DTO.ThongKe.ChiTietLoaiSanPhamDTO;
import DTO.ThongKe.ThongKeLoaiSanPhamDTO;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JDialog;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class ChiTietGiaXuatSPDialog extends PriceDetailDialog {
    private final ThongKeBUS tkBUS = new ThongKeBUS();
    private final DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    private final DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
    private ArrayList<ChiTietGiaXuatSPDTO> arr;
    private DefaultTableModel dtm;
    private DefaultTableCellRenderer dtcr;
    
    public ChiTietGiaXuatSPDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public ChiTietGiaXuatSPDialog(JDialog parent, boolean modal, ChiTietLoaiSanPhamDTO product, DateRangeDTO dateRange) {
        super(getOwnerFrame(parent), modal);
        initTable();
        displayInfo(product, dateRange);
        getChiTietGiaXuatSanPham(product.getMaSanPham(), dateRange);
    }

    public ArrayList<ChiTietGiaXuatSPDTO> getArr() {
        return arr;
    }

    public void setArr(ArrayList<ChiTietGiaXuatSPDTO> arr) {
        this.arr = arr;
    }
    
    private void displayInfo(ChiTietLoaiSanPhamDTO product, DateRangeDTO dateRange) {
        super.setTitle("Chi tiết giá xuất sản phẩm");
        getLblPrimary().setText("Tên sản phẩm: " + product.getTenSanPham());
        getLblSecondary().setVisible(false);
        getLblTime().setText("Thời gian: " + dateRange.getFromDate().format(dateFormatter) + " - " + dateRange.getToDate().format(dateFormatter));
    }
    
    private void getChiTietGiaXuatSanPham(int productId, DateRangeDTO dateRange) {
        ArrayList<ChiTietGiaXuatSPDTO> arr = new ArrayList<>();
        try {
            arr = tkBUS.chiTietGiaXuatSanPham(productId, dateRange);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(ChiTietGiaXuatSPDialog.this, "Lỗi kết nối cơ sở dữ liệu", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(ChiTietGiaXuatSPDialog.this, "Lỗi không xác định", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }
        getDefaultTableModel().setRowCount(0);
        if (arr.size() == 0) return;
        setArr(arr);
        for (int i = 0; i < arr.size(); ++i) {
            ChiTietGiaXuatSPDTO ctgx = arr.get(i);
            int maPhieuXuat = ctgx.getMaPhieuXuat();
            LocalDateTime thoiGianTao = ctgx.getThoiGianTao();
            String strThoiGianTao = thoiGianTao.format(dateTimeFormatter);
            int soLuongXuat = ctgx.getSoLuongXuat();
            Long donGiaXuat = ctgx.getDonGiaXuat();
            Object [] row = {maPhieuXuat, strThoiGianTao, soLuongXuat, donGiaXuat};
            getDefaultTableModel().addRow(row);
        }
        for (int i = 0; i < getTable().getColumnCount(); ++i) {
            getTable().getColumnModel().getColumn(i).setCellRenderer(dtcr);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChiTietGiaXuatSPDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChiTietGiaXuatSPDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChiTietGiaXuatSPDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChiTietGiaXuatSPDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChiTietGiaXuatSPDialog dialog = new ChiTietGiaXuatSPDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    @Override
    public void initTable() {
        setDefaultTableModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu xuất", "Thời gian tạo", "Số lượng xuất", "Đơn giá xuất"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        getTable().setModel(getDefaultTableModel());
        setDefaultTableCellRenderer(new DefaultTableCellRenderer());
        getDefaultTableCellRenderer().setHorizontalAlignment(SwingConstants.CENTER);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
