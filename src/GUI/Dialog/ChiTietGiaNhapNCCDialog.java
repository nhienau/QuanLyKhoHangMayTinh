package GUI.Dialog;

import BUS.ThongKeBUS;
import DTO.DateRangeDTO;
import DTO.ThongKe.ChiTietGiaNhapNCCDTO;
import DTO.ThongKe.ChiTietSanPhamNhapDTO;
import DTO.ThongKe.ThongKeSanPhamDTO;
import java.util.ArrayList;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class ChiTietGiaNhapNCCDialog extends javax.swing.JDialog {
    private final ThongKeBUS tkBUS = new ThongKeBUS();
    private final DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    private final DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
    private DefaultTableModel dtm;
    private DefaultTableCellRenderer dtcr;
    
    public ChiTietGiaNhapNCCDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public ChiTietGiaNhapNCCDialog(JDialog parent, boolean modal, ThongKeSanPhamDTO product, ChiTietSanPhamNhapDTO provider, DateRangeDTO dateRange) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        initTable();
        displayInfo(product, provider, dateRange);
        getChiTietGiaNhap(product.getMaSanPham(), provider.getMaNhaCungCap(), dateRange);
    }
    
    private void initTable() {
        dtm = new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu nhập", "Thời gian tạo", "Số lượng nhập", "Đơn giá nhập"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        table.setModel(dtm);
        dtcr = new DefaultTableCellRenderer();
        dtcr.setHorizontalAlignment(SwingConstants.CENTER);
    }
    
    private void displayInfo(ThongKeSanPhamDTO product, ChiTietSanPhamNhapDTO provider, DateRangeDTO dateRange) {
        lblTenSanPham.setText("Tên sản phẩm: " + product.getTenSanPham());
        lblNhaCungCap.setText("Nhà cung cấp: " + provider.getTenNhaCungCap());
        lblThoiGian.setText("Thời gian: " + dateRange.getFromDate().format(dateFormatter) + " - " + dateRange.getToDate().format(dateFormatter));
    }
    
    private void getChiTietGiaNhap(int productId, int providerId, DateRangeDTO dateRange) {
        ArrayList<ChiTietGiaNhapNCCDTO> arr = new ArrayList<>();
        try {
            arr = tkBUS.chiTietGiaNhapNCC(productId, providerId, dateRange);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(ChiTietGiaNhapNCCDialog.this, "Lỗi kết nối cơ sở dữ liệu", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(ChiTietGiaNhapNCCDialog.this, "Lỗi không xác định", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }
        dtm.setRowCount(0);
        if (arr.size() == 0) return;
        
        for (int i = 0; i < arr.size(); ++i) {
            ChiTietGiaNhapNCCDTO ctgn = arr.get(i);
            int maPhieuNhap = ctgn.getMaPhieuNhap();
            LocalDateTime thoiGianTao = ctgn.getThoiGianTao();
            String strThoiGianTao = thoiGianTao.format(dateTimeFormatter);
            int soLuongNhap = ctgn.getSoLuongNhap();
            Long donGiaNhap = ctgn.getDonGiaNhap();
            Object [] row = {maPhieuNhap, strThoiGianTao, soLuongNhap, donGiaNhap};
            dtm.addRow(row);
        }
        for (int i = 0; i < table.getColumnCount(); ++i) {
            table.getColumnModel().getColumn(i).setCellRenderer(dtcr);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pContainer = new javax.swing.JPanel();
        lblTenSanPham = new javax.swing.JLabel();
        lblNhaCungCap = new javax.swing.JLabel();
        lblThoiGian = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Chi tiết giá nhập");
        setResizable(false);

        pContainer.setForeground(new java.awt.Color(255, 255, 255));

        lblTenSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTenSanPham.setForeground(new java.awt.Color(0, 0, 0));
        lblTenSanPham.setText("Tên sản phẩm: ");

        lblNhaCungCap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNhaCungCap.setForeground(new java.awt.Color(0, 0, 0));
        lblNhaCungCap.setText("Nhà cung cấp: ");

        lblThoiGian.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblThoiGian.setForeground(new java.awt.Color(0, 0, 0));
        lblThoiGian.setText("Thời gian: ");

        table.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu nhập", "Thời gian tạo", "Số lượng nhập", "Đơn giá nhập"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout pContainerLayout = new javax.swing.GroupLayout(pContainer);
        pContainer.setLayout(pContainerLayout);
        pContainerLayout.setHorizontalGroup(
            pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                    .addGroup(pContainerLayout.createSequentialGroup()
                        .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTenSanPham)
                            .addComponent(lblNhaCungCap)
                            .addComponent(lblThoiGian))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pContainerLayout.setVerticalGroup(
            pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTenSanPham)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNhaCungCap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblThoiGian)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChiTietGiaNhapNCCDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChiTietGiaNhapNCCDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChiTietGiaNhapNCCDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChiTietGiaNhapNCCDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChiTietGiaNhapNCCDialog dialog = new ChiTietGiaNhapNCCDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblNhaCungCap;
    private javax.swing.JLabel lblTenSanPham;
    private javax.swing.JLabel lblThoiGian;
    private javax.swing.JPanel pContainer;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
