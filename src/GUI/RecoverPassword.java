/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI;

import BUS.NguoiDungBUS;
import DTO.NguoiDungDTO;
import com.formdev.flatlaf.FlatLightLaf;
import helper.Exception.AuthenticationException;
import helper.Exception.EmptyFieldException;
import helper.SendEmailSMTP.EmailSentListener;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.sql.SQLException;
import java.awt.event.KeyEvent;

public class RecoverPassword extends javax.swing.JDialog implements EmailSentListener {
    private final NguoiDungBUS ndBUS = new NguoiDungBUS();
    private String otp;
    private NguoiDungDTO user;

    public RecoverPassword(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
    }

    public String getOtp() {
        return otp;
    }

    public void setOtp(String otp) {
        this.otp = otp;
    }

    public NguoiDungDTO getUser() {
        return user;
    }

    public void setUser(NguoiDungDTO user) {
        this.user = user;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pHeader = new javax.swing.JPanel();
        lblRecoverPassword = new javax.swing.JLabel();
        pMain = new javax.swing.JPanel();
        pEmailVerification = new javax.swing.JPanel();
        lblEnterEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnSendCode = new javax.swing.JButton();
        spSendingMessage = new javax.swing.JScrollPane();
        taSendingMessage = new javax.swing.JTextArea();
        pCodeVerification = new javax.swing.JPanel();
        lblCodeSent = new javax.swing.JLabel();
        lblEnterCode = new javax.swing.JLabel();
        txtOtp = new javax.swing.JTextField();
        btnConfirmCode = new javax.swing.JButton();
        pNewPassword = new javax.swing.JPanel();
        lblSetNewPassword = new javax.swing.JLabel();
        lblNewPassword = new javax.swing.JLabel();
        txtNewPassword = new javax.swing.JPasswordField();
        lblConfirmNewPassword = new javax.swing.JLabel();
        txtConfirmNewPassword = new javax.swing.JPasswordField();
        btnChangePassword = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Khôi phục mật khẩu");
        setResizable(false);

        pHeader.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        pHeader.setPreferredSize(new java.awt.Dimension(540, 70));
        pHeader.setLayout(new java.awt.BorderLayout());

        lblRecoverPassword.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        lblRecoverPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblRecoverPassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRecoverPassword.setText("KHÔI PHỤC MẬT KHẨU");
        lblRecoverPassword.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pHeader.add(lblRecoverPassword, java.awt.BorderLayout.CENTER);

        getContentPane().add(pHeader, java.awt.BorderLayout.NORTH);

        pMain.setPreferredSize(new java.awt.Dimension(540, 250));
        pMain.setLayout(new java.awt.CardLayout());

        pEmailVerification.setBackground(new java.awt.Color(255, 255, 255));
        pEmailVerification.setPreferredSize(new java.awt.Dimension(540, 250));
        pEmailVerification.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblEnterEmail.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblEnterEmail.setForeground(new java.awt.Color(0, 0, 0));
        lblEnterEmail.setText("Nhập địa chỉ email");
        pEmailVerification.add(lblEnterEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, -1, -1));

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmailKeyPressed(evt);
            }
        });
        pEmailVerification.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 251, 41));

        btnSendCode.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnSendCode.setForeground(new java.awt.Color(0, 0, 0));
        btnSendCode.setText("Gửi mã xác nhận");
        btnSendCode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSendCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendCodeActionPerformed(evt);
            }
        });
        pEmailVerification.add(btnSendCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 90, 158, 41));

        spSendingMessage.setBackground(new java.awt.Color(255, 255, 255));
        spSendingMessage.setBorder(null);
        spSendingMessage.setForeground(new java.awt.Color(255, 255, 255));
        spSendingMessage.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        spSendingMessage.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        spSendingMessage.setOpaque(false);
        spSendingMessage.setViewportView(taSendingMessage);

        taSendingMessage.setEditable(false);
        taSendingMessage.setBackground(new java.awt.Color(255, 255, 255));
        taSendingMessage.setColumns(20);
        taSendingMessage.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        taSendingMessage.setForeground(new java.awt.Color(0, 0, 0));
        taSendingMessage.setLineWrap(true);
        taSendingMessage.setRows(5);
        taSendingMessage.setText("Mã xác nhận đang được gửi đến email của bạn. Vui lòng chờ trong giây lát.");
        taSendingMessage.setWrapStyleWord(true);
        taSendingMessage.setFocusable(false);
        taSendingMessage.setMargin(new java.awt.Insets(0, 0, 0, 0));
        taSendingMessage.setOpaque(false);
        spSendingMessage.setViewportView(taSendingMessage);

        pEmailVerification.add(spSendingMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 420, 50));
        spSendingMessage.getViewport().setOpaque(false);
        spSendingMessage.setVisible(false);

        pMain.add(pEmailVerification, "card2");

        pCodeVerification.setBackground(new java.awt.Color(255, 255, 255));
        pCodeVerification.setPreferredSize(new java.awt.Dimension(540, 250));
        pCodeVerification.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCodeSent.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblCodeSent.setForeground(new java.awt.Color(0, 0, 0));
        lblCodeSent.setText("Mã xác nhận gồm 6 chữ số đã được gửi vào địa chỉ email của bạn.");
        pCodeVerification.add(lblCodeSent, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 63, -1, -1));

        lblEnterCode.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblEnterCode.setForeground(new java.awt.Color(0, 0, 0));
        lblEnterCode.setText("Nhập mã xác nhận:");
        pCodeVerification.add(lblEnterCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 90, 138, -1));

        txtOtp.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtOtp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtOtpKeyPressed(evt);
            }
        });
        pCodeVerification.add(txtOtp, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 117, 273, 41));

        btnConfirmCode.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnConfirmCode.setForeground(new java.awt.Color(0, 0, 0));
        btnConfirmCode.setText("Xác nhận");
        btnConfirmCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmCodeActionPerformed(evt);
            }
        });
        pCodeVerification.add(btnConfirmCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 117, 179, 41));

        pMain.add(pCodeVerification, "card3");

        pNewPassword.setBackground(new java.awt.Color(255, 255, 255));
        pNewPassword.setPreferredSize(new java.awt.Dimension(540, 250));
        pNewPassword.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSetNewPassword.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblSetNewPassword.setForeground(new java.awt.Color(0, 0, 0));
        lblSetNewPassword.setText("Hãy đặt một mật khẩu mới.");
        pNewPassword.add(lblSetNewPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        lblNewPassword.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblNewPassword.setForeground(new java.awt.Color(0, 0, 0));
        lblNewPassword.setText("Mật khẩu mới");
        pNewPassword.add(lblNewPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        txtNewPassword.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtNewPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNewPasswordKeyPressed(evt);
            }
        });
        pNewPassword.add(txtNewPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, 259, 42));

        lblConfirmNewPassword.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblConfirmNewPassword.setForeground(new java.awt.Color(0, 0, 0));
        lblConfirmNewPassword.setText("Xác nhận mật khẩu mới");
        pNewPassword.add(lblConfirmNewPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        txtConfirmNewPassword.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtConfirmNewPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConfirmNewPasswordActionPerformed(evt);
            }
        });
        txtConfirmNewPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConfirmNewPasswordKeyPressed(evt);
            }
        });
        pNewPassword.add(txtConfirmNewPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, 259, 42));

        btnChangePassword.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnChangePassword.setForeground(new java.awt.Color(0, 0, 0));
        btnChangePassword.setText("Đổi mật khẩu");
        btnChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePasswordActionPerformed(evt);
            }
        });
        pNewPassword.add(btnChangePassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 147, 42));

        pMain.add(pNewPassword, "card4");

        getContentPane().add(pMain, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendCodeActionPerformed
        // TODO add your handling code here:
        String email = txtEmail.getText();

        NguoiDungDTO user = null;
        try {
            user = ndBUS.verifyEmail(email);
        } catch (EmptyFieldException | IllegalArgumentException | AuthenticationException e) {
            JOptionPane.showMessageDialog(RecoverPassword.this, e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
            txtEmail.requestFocus();
            return;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(RecoverPassword.this, "Lỗi kết nối cơ sở dữ liệu", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(RecoverPassword.this, "Lỗi không xác định", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }
        
        setUser(user);
        
        btnSendCode.setEnabled(false);
        txtEmail.setEnabled(false);
        spSendingMessage.setVisible(true);
        
        try {
            ndBUS.sendEmailOTP(user.getTaiKhoan(), email, this);
        } catch (Exception ex) {
//            Logger.getLogger(RecoverPassword.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSendCodeActionPerformed

    private void btnConfirmCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmCodeActionPerformed
        // TODO add your handling code here:
        String inputOtp = txtOtp.getText();
        boolean check = false;
        try {
            check = ndBUS.handleConfirmOTP(inputOtp, otp);
        } catch (EmptyFieldException e) {
            JOptionPane.showMessageDialog(RecoverPassword.this, e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
            txtOtp.requestFocus();
            return;
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(RecoverPassword.this, e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (check) {
            CardLayout forgotPassword = (CardLayout) pMain.getLayout();
            forgotPassword.next(pMain);
        } else {
            JOptionPane.showMessageDialog(RecoverPassword.this, "Mã xác nhận không chính xác");
        }
    }//GEN-LAST:event_btnConfirmCodeActionPerformed

    private void btnChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePasswordActionPerformed
        // TODO add your handling code here:
        String newPassword = new String(txtNewPassword.getPassword());
        String confirmNewPassword = new String(txtConfirmNewPassword.getPassword());
        boolean check = false;
        
        try {
            check = ndBUS.handleRecoverPassword(user, newPassword, confirmNewPassword);
        } catch (EmptyFieldException e) {
            JOptionPane.showMessageDialog(RecoverPassword.this, e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
            if (e.getFieldName().equalsIgnoreCase("newPassword")) {
                txtNewPassword.requestFocus();
            } else if (e.getFieldName().equalsIgnoreCase("confirmNewPassword")) {
                txtConfirmNewPassword.requestFocus();
            }
            return;
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(RecoverPassword.this, e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
            return;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(RecoverPassword.this, "Lỗi kết nối cơ sở dữ liệu", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(RecoverPassword.this, "Lỗi không xác định", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }
        
        if (check) {
            JOptionPane.showMessageDialog(RecoverPassword.this, "Thay đổi mật khẩu thành công");
        }
        this.dispose();
    }//GEN-LAST:event_btnChangePasswordActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtConfirmNewPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConfirmNewPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConfirmNewPasswordActionPerformed

    private void txtNewPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewPasswordKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnChangePasswordActionPerformed(null);
        }
    }//GEN-LAST:event_txtNewPasswordKeyPressed

    private void txtConfirmNewPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmNewPasswordKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnChangePasswordActionPerformed(null);
        }
    }//GEN-LAST:event_txtConfirmNewPasswordKeyPressed

    private void txtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnSendCodeActionPerformed(null);
        }
    }//GEN-LAST:event_txtEmailKeyPressed

    private void txtOtpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOtpKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnConfirmCodeActionPerformed(null);
        }
    }//GEN-LAST:event_txtOtpKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnsupportedLookAndFeelException {
        UIManager.setLookAndFeel(new FlatLightLaf());
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RecoverPassword dialog = new RecoverPassword(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChangePassword;
    private javax.swing.JButton btnConfirmCode;
    private javax.swing.JButton btnSendCode;
    private javax.swing.JLabel lblCodeSent;
    private javax.swing.JLabel lblConfirmNewPassword;
    private javax.swing.JLabel lblEnterCode;
    private javax.swing.JLabel lblEnterEmail;
    private javax.swing.JLabel lblNewPassword;
    private javax.swing.JLabel lblRecoverPassword;
    private javax.swing.JLabel lblSetNewPassword;
    private javax.swing.JPanel pCodeVerification;
    private javax.swing.JPanel pEmailVerification;
    private javax.swing.JPanel pHeader;
    private javax.swing.JPanel pMain;
    private javax.swing.JPanel pNewPassword;
    private javax.swing.JScrollPane spSendingMessage;
    private javax.swing.JTextArea taSendingMessage;
    private javax.swing.JPasswordField txtConfirmNewPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtNewPassword;
    private javax.swing.JTextField txtOtp;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onEmailSent(String otp) {
        setOtp(otp);
        CardLayout forgotPassword = (CardLayout) pMain.getLayout();
        forgotPassword.next(pMain);
    }

    @Override
    public void onEmailSendError(Exception e) {
        e.printStackTrace();
        btnSendCode.setEnabled(true);
        txtEmail.setEnabled(true);
        spSendingMessage.setVisible(false);
        JOptionPane.showMessageDialog(RecoverPassword.this, "Có lỗi xảy ra trong quá trình gửi email.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}
